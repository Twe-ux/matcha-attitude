import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function checkDatabase() {
  try {
    console.log("üîç V√©rification de la base de donn√©es...\n");

    // V√©rifier les utilisateurs
    const userCount = await prisma.user.count();
    console.log(`üë• Utilisateurs: ${userCount}`);

    // V√©rifier les cat√©gories
    const categoryCount = await prisma.category.count();
    console.log(`üìÇ Cat√©gories: ${categoryCount}`);

    // V√©rifier les produits
    const productCount = await prisma.product.count();
    console.log(`üì¶ Produits: ${productCount}`);

    // V√©rifier les articles du panier
    const cartItemCount = await prisma.cartItem.count();
    console.log(`üõí Articles dans le panier: ${cartItemCount}`);

    // V√©rifier les commandes
    const orderCount = await prisma.order.count();
    console.log(`üìã Commandes: ${orderCount}`);

    // V√©rifier les adresses
    const addressCount = await prisma.address.count();
    console.log(`üìç Adresses: ${addressCount}`);

    console.log("\n‚úÖ Base de donn√©es MongoDB Atlas op√©rationnelle !");

    // Afficher quelques produits
    console.log("\nüì¶ Quelques produits disponibles:");
    const products = await prisma.product.findMany({
      take: 3,
      include: {
        category: true,
      },
    });

    products.forEach((product) => {
      console.log(
        `  ‚Ä¢ ${product.name} - ${product.price}‚Ç¨ (${product.category.name})`
      );
    });
  } catch (error) {
    console.error("‚ùå Erreur lors de la v√©rification:", error);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabase();
